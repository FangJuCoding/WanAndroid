apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        versionCode 1
        versionName "1.0"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {

            } else {
                resources {
                    // 正式版本时。排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    api rootProject.ext.dependencies["kotlin-stdlib"]
    api rootProject.ext.dependencies["core-ktx"]
    api rootProject.ext.dependencies["kotlinx-coroutines-core"]
    api rootProject.ext.dependencies["kotlinx-coroutines-android"]
    api rootProject.ext.dependencies["lifecycle-extensions"]
    api rootProject.ext.dependencies["lifecycle-viewmodel-ktx"]
    api rootProject.ext.dependencies["lifecycle-livedata-ktx"]
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["constraint-layout"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["logging-interceptor"]
    api project(':library-res')
    //阿里路由框架
    api(rootProject.ext.dependencies["arouter-api"]) {
        exclude group: 'com.android.support'
    }
}